@font-face {
    font-family: "Jersey";
    src: url("./fonts/Jersey15-Regular.woff2") format("woff2")
}

@theme {
    --font-jersey: "Jersey", sans-serif;
}

@import "tailwindcss";

:root {
    font-size: 12px;
    --color-text: #111;
    --color-bg: #fff;
    --color-card: rgba(255, 255, 255, 0.8);
    --color-link: #0f0f0f;
    --color-link-hover: #008cff;
    --page-padding: 1.5rem;
    --content-padding: 4rem;
}



[data-theme="dark"] {
    --color-text: #ffffff;
    --color-bg: #000000;
    --color-card: rgba(0, 0, 0, 0.8);
    --color-link: #ffffff;
    --color-link-hover: #ff0080;
}




body {
    margin: 0;
    color: var(--color-text);
    background-color: var(--color-bg);
    font-family: ui-monospace, monospace;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;

    transition: color 0.3s;
}

/* Page Loader */
.js .loading::before,
.js .loading::after {
    content: '';
    position: fixed;
    z-index: 1000;
}

.js .loading::before {
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--color-bg);
}

.js .loading::after {
    top: 50%;
    left: 50%;
    width: 60px;
    height: 60px;
    margin: -30px 0 0 -30px;
    border-radius: 50%;
    opacity: 0.4;
    background: var(--color-link);
    animation: loaderAnim 0.7s linear infinite alternate forwards;

}

@keyframes loaderAnim {
    to {
        opacity: 1;
        transform: scale3d(0.5, 0.5, 1);
    }
}

a {
    opacity: 0.7;
    text-decoration: none;
    color: var(--color-link);
    outline: none;
    cursor: pointer;

    transition: color 0.3s;
}

a:hover {
    opacity: 1;
    text-decoration: underline;
    color: var(--color-link-hover);
    outline: none;
}

/* Better focus styles from https://developer.mozilla.org/en-US/docs/Web/CSS/:focus-visible */
a:focus {
    /* Provide a fallback style for browsers
	 that don't support :focus-visible */
    outline: none;
    background: lightgrey;
}

a:focus:not(:focus-visible) {
    /* Remove the focus indicator on mouse-focus for browsers
	 that do support :focus-visible */
    background: transparent;
}

a:focus-visible {
    /* Draw a very noticeable focus style for
	 keyboard-focus on browsers that do support
	 :focus-visible */
    outline: 2px solid red;
    background: transparent;
}

.unbutton {
    background: none;
    border: 0;
    padding: 0;
    margin: 0;
    font: inherit;
    cursor: pointer;
}

.unbutton:focus {
    outline: none;
}

.frame {
    padding: var(--page-padding);
    position: relative;
    display: grid;
    z-index: 1000;
    width: 100%;
    height: 100%;
    grid-row-gap: 1rem;
    grid-column-gap: 2rem;
    pointer-events: none;
    justify-items: start;
    grid-template-columns: auto auto;
    grid-template-areas: 'title' 'archive' 'back' 'github' 'sponsor' 'demos' 'tags';
}


.frame #cdawrap {
    justify-self: start;
}

.frame a {
    pointer-events: auto;
}

.frame__title {
    grid-area: title;
    font-size: inherit;
    margin: 0;
}

.frame__back {
    grid-area: back;
    justify-self: start;
}

.frame__archive {
    grid-area: archive;
    justify-self: start;
}

.frame__github {
    grid-area: github;
}

.frame__tags {
    grid-area: tags;
}

.frame__tags a {
    padding: .25rem;
}

.frame__demos {
    grid-area: demos;
    display: flex;
    gap: 1rem;
}

.content {
    padding: var(--page-padding);
    display: flex;
    flex-direction: column;
    width: 100vw;
    position: relative;
}

.demo__infos__container {
    margin-top: 3rem;
    display: block;
    position: fixed;
    z-index: 1000;
}

.demo__infos {
    display: flex;
    max-width: 50lh;
    font-size: small;
    width: auto;
    flex-direction: column;
    gap: 0.5rem;
    background-color: var(--color-card);
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    border-radius: 12px;
    padding: 1rem;
    transition: 0.3s;
}

.demo__infos ul {
    margin: 0.5rem;
    padding-left: 1.5rem;
}


@media screen and (min-width: 53em) {
    body {
        --page-padding: 2rem 3rem;
    }

    .frame {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        grid-template-columns: auto auto auto auto 1fr;
        grid-template-rows: auto auto;
        align-content: space-between;
        grid-template-areas: 'title back archive github sponsor' 'tags tags tags tags tags';
    }

    .frame #cdawrap {
        justify-self: end;
    }
}

#threecanvas {
    position: fixed;
    background-color: var(--color-bg);
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    transition: background-color 1.5s;

}

.theme-toggle {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    align-items: center;
}

.switch {
    position: relative;
    display: inline-block;
    align-items: center;
    align-content: center;
    width: 60px;
    height: 34px;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: var(--color-link-hover);
    -webkit-transition: .3s;
    transition: .3s;
    align-items: center;


}

.slider:before {
    position: absolute;
    content: "";
    height: 26px;
    width: 26px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    -webkit-transition: .3s;
    transition: .3s ease;
}

input:checked+.slider {
    background-color: var(--color-link-hover);
}

input:focus+.slider {
    box-shadow: 0 0 1px #2196F3;
}

input:checked+.slider:before {
    -webkit-transform: translateX(26px);
    -ms-transform: translateX(26px);
    transform: translateX(26px);
}

.slider.round {
    border-radius: 34px;
}

.slider.round:before {
    border-radius: 50%;
}

.slider-label {
    display: inline-block;
    font-size: large;
    font-weight: bold;
    color: var(--color-text);
    padding-left: 0.5rem;
    transition: .3s ease;
}

.loader-container {
    display: flex;
    justify-content: center;
    align-items: center;
}

.loader {
    width: 36px;
    height: 36px;
    border: 5px solid var(--color-text);
    border-bottom-color: var(--color-link-hover);
    border-radius: 50%;
    display: inline-block;
    box-sizing: border-box;
    border-radius: 50%;
    animation: rotation 1s linear infinite;
}

@keyframes rotation {
    0% {
        transform: rotate(0deg);
    }

    100% {
        transform: rotate(360deg);
    }

}